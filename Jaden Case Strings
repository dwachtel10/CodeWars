//7 kyu
//Instructions:
//Your task is to convert strings to how they would be written by Jaden Smith.
//When writing on Twitter, he is known for almost always capitalizing every word.

//I looked this up.
using System;

public static class JadenCase
{
  public static string ToJadenCase(this string phrase)=> System.Globalization.CultureInfo.CurrentCulture.TextInfo.ToTitleCase(phrase);
}

//tests

using System.Collections.Generic;
using NUnit.Framework;
using System;

[TestFixture]
public class JadenCaseTest
{
  [Test, TestCaseSource("FixedTests")]
  public string FixedTest(string input)
  {
    return input.ToJadenCase();
  }
  
  [Test, TestCaseSource("RandomTests")]
  public string RandomTest(string input)
  {
    return input.ToJadenCase();
  }
  
  private TestCaseData[] FixedTests =
  {
    new TestCaseData("most trees are blue")
            .Returns("Most Trees Are Blue"),
            
    new TestCaseData("How can mirrors be real if our eyes aren't real") 
            .Returns("How Can Mirrors Be Real If Our Eyes Aren't Real"),
            
    new TestCaseData("All the rules in this world were made by someone no smarter than you. So make your own.")
            .Returns("All The Rules In This World Were Made By Someone No Smarter Than You. So Make Your Own."),
            
    new TestCaseData("School is the tool to brainwash the youth.")
            .Returns("School Is The Tool To Brainwash The Youth."),
            
    new TestCaseData("If newborn babies could speak they would be the most intelligent beings on planet Earth.")
            .Returns("If Newborn Babies Could Speak They Would Be The Most Intelligent Beings On Planet Earth."),
            
    new TestCaseData("If everybody in the world dropped out of school we would have a much more intelligent society.")
            .Returns("If Everybody In The World Dropped Out Of School We Would Have A Much More Intelligent Society."),
            
    new TestCaseData("Trees are never sad look at them every once in awhile they're quite beautiful.")
            .Returns("Trees Are Never Sad Look At Them Every Once In Awhile They're Quite Beautiful.")
};

 private Random random = new Random();
  private IEnumerable<TestCaseData> RandomTests
  {
    get
    {
      for(int i = 0; i < 20; i++)
      {
        string phrase = GeneratePhrase();
        yield return new TestCaseData( phrase.ToLower() ).Returns( phrase );
      }
    }
  }
  
  private string GeneratePhrase()
  {
    int wordCount = random.Next(5,15);
    var words = new List<string>();
    
    for(int i = 0; i < wordCount; i++)
    {
      words.Add(GenerateWord());
    }
    
    return String.Join(" ", words);
  }
  
  private string GenerateWord()
  {
    int wordLen = random.Next(1,10);
    string result = "" + Char.ToUpper(GenerateChar());
    
    for(int i = 0; i < wordLen; i++)
    {
      result += GenerateChar();
    }
    
    return result;
  }
  
  private char GenerateChar()
  {
    return (char)('a' + random.Next(26));
  }
}
