//8 kyu
//Instructions:
//I have a cat and a dog. I got them at the same time as kitten/puppy. That was humanYears years ago. Return their respective ages now as [humanYears,catYears,dogYears]
//NOTES:humanYears >= 1
//Cat Years
//15 cat years for first year
//+9 cat years for second year
//+4 cat years for each year after that
//Dog Years
//15 dog years for first year
//+9 dog years for second year
//+5 dog years for each year after that

public class Dinglemouse {

  public static int[] humanYearsCatYearsDogYears(int humanYears) {
    int catYears = 0;
    int dogYears = 0;
    for(int i = 1; i <= humanYears; i++)
      {
        if (i == 1)
          {
          catYears += 15;
          dogYears += 15;
          }
          else if (i == 2)
          {
          catYears += 9;
          dogYears += 9;
          }
          else
          {
          catYears +=4;
          dogYears +=5;
          }
      }
    
    return new int[]{humanYears,catYears,dogYears};
  }
}

//test

namespace Solution {
  using NUnit.Framework;
  using System;

  // TODO: Replace examples and use TDD development by writing your own tests

  [TestFixture]
  public class SolutionTest
  {
    [Test]
    public void One()
    {
      Assert.AreEqual(new int[]{1,15,15}, Dinglemouse.humanYearsCatYearsDogYears(1));
    }
    
    [Test]
    public void Two()
    {
      Assert.AreEqual(new int[]{2,24,24}, Dinglemouse.humanYearsCatYearsDogYears(2));
    }
    
    [Test]
    public void Ten()
    {
      Assert.AreEqual(new int[]{10,56,64}, Dinglemouse.humanYearsCatYearsDogYears(10));
    }
    
  }
}
