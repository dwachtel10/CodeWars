//7 kyu
//In mathematics, the factorial of a non-negative integer n, denoted by n!, is the product of all positive integers less than or equal to n. 
//For example: 5! = 5 * 4 * 3 * 2 * 1 = 120. By convention the value of 0! is 1.
//Write a function to calculate factorial for a given input. 
//If input is below 0 or above 12 throw an exception of type ArgumentOutOfRangeException (C#) or IllegalArgumentException (Java) or RangeException (PHP) or throw a RangeError (JavaScript).

using System;

public static class Kata
{
  public static int Factorial(int n)
  {
    int total = 1;
    if (n < 0 || n > 12)
    { throw new ArgumentOutOfRangeException();}
    else if (n == 0)
    {
    return total;
    }
    else
    {
      for (int i = n; i>0; i--)
      {
        total *=i;
      }
    }
    return total;
  }
}

//tests

using System;
using NUnit.Framework;

[TestFixture]
public class FactorialTests
{
  [Test]
  public void FactorialOf0ShouldBe1()
  {
    Assert.AreEqual(1, Kata.Factorial(0));
  }
  
  [Test]
  public void FactorialOf1ShouldBe1()
  {
    Assert.AreEqual(1, Kata.Factorial(1));
  }
  
  [Test]
  public void FactorialOf2ShouldBe2()
  {
    Assert.AreEqual(2, Kata.Factorial(2));
  }
  
  [Test]
  public void FactorialOf3ShouldBe6()
  {
    Assert.AreEqual(6, Kata.Factorial(3));
  }
}
