//8 kyu
//Instructions:
//Return a new array consisting of elements which are multiple of their own index in input array (length > 1).

using System;
using System.Collections.Generic;

public static class Kata
{
  public static List<int> MultipleOfIndex(List<int> xs)
  {
    List<int> multiples = new List<int>();
    for (int i = 1; i < xs.Count; i++)
      {
        if (xs[i] % i == 0)
          { multiples.Add(xs[i]); }
      }
    return multiples;
  }
}

//tests
namespace Solution 
{
  using NUnit.Framework;
  using System;
  using System.Collections.Generic;

  [TestFixture]
  public class SolutionTest
  {
    [Test]
    public void BasicTest()
    {
      Assert.That(Kata.MultipleOfIndex(new List<int> {22, -6, 32, 82, 9, 25}), Is.EqualTo(new List<int> {-6, 32, 25}));
      Assert.That(Kata.MultipleOfIndex(new List<int> {68, -1, 1, -7, 10, 10}), Is.EqualTo(new List<int> {-1, 10}));
      Assert.That(Kata.MultipleOfIndex(new List<int> {11, -11}), Is.EqualTo(new List<int> {-11}));
      Assert.That(Kata.MultipleOfIndex(new List<int> {-56,-85,72,-26,-14,76,-27,72,35,-21,-67,87,0,21,59,27,-92,68}), Is.EqualTo(new List<int> {-85, 72, 0, 68}));
      Assert.That(Kata.MultipleOfIndex(new List<int> {28,38,-44,-99,-13,-54,77,-51}), Is.EqualTo(new List<int> {38, -44, -99}));
      Assert.That(Kata.MultipleOfIndex(new List<int> {-1,-49,-1,67,8,-60,39,35}), Is.EqualTo(new List<int> {-49, 8, -60, 35}));
    }
  }
}
