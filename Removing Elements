//8 kyu
//Instructions:Take an array and remove every second element out of that array. 
//Always keep the first element and start removing with the next element.

//I am not proud of this result.

using System.Linq;
using System;
  public static class Kata
    {
        public static object[] RemoveEveryOther(object[] arr)
        {
        int arrCount = arr.Length;
        int arrCountHalf = 0;
        if (arrCount % 2 == 0)
        {arrCountHalf = arrCount/2;}
        else 
        {arrCountHalf = (arrCount/2) + 1;}
        object[] final = new object[arrCountHalf];
        int count = 0;
        for (int i = 0; i < arr.Length; i += 2, count++)
          {
            final[count] = arr[i];
          }
          return final;   
        }
     
    }
    
//tests

using System;
using System.Collections.Generic;
using NUnit.Framework;
using System.Linq;

  [TestFixture]
    public class KataTest
    {
        [Test]
        public void BasicTest()
        {
            Assert.AreEqual(new object[]{"Hello", "Hello Again"}, Kata.RemoveEveryOther(new object[]{"Hello", "Goodbye", "Hello Again"}));
            Assert.AreEqual(new object[] { new object[] { 1, 2 } }, Kata.RemoveEveryOther(new object[] { new object[] { 1, 2 } }));
            Assert.AreEqual(new object[] { 1, 3, 5, 7, 9 }, Kata.RemoveEveryOther(new object[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }));
            Assert.AreEqual(new object[] { new object[] { "Goodbye" } }, Kata.RemoveEveryOther(new object[] { new object[] { "Goodbye" }, new Dictionary<string,string>(){{"Great", "Job"}}}));
            Assert.AreEqual(new object[] { }, Kata.RemoveEveryOther(new object[] { }));
        }
    }

