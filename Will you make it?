//8 kyu
//Instructions: you realize that you fuel is running out and the nearest pump is 50 miles away! 
//You know that on average, your car runs on about 25 miles per gallon. There are 2 gallons left. 
//Considering these factors, write a function that tells you if it is possible to get to the pump or not.
//Function should return true if it is possible and false if not.

using System;

public static class Kata
{
  public static bool ZeroFuel(uint distanceToPump, uint mpg, uint fuelLeft) => fuelLeft * mpg >= distanceToPump;
}

//tests
namespace Solution 
{
  using NUnit.Framework;
  using System;
  
  public static class Solution
  {
    public static bool ZeroFuel(uint distanceToPump, uint mpg, uint fuelLeft) =>
      mpg * fuelLeft >= distanceToPump;
  }

  [TestFixture]
  public class SolutionTest
  {
    [Test]
    public void SampleTest()
    {
      Assert.AreEqual(true, Kata.ZeroFuel(50, 25, 2));
      Assert.AreEqual(false, Kata.ZeroFuel(100, 50, 1));
    }
    
    [Test]
    public void BasicTest()
    {
      Assert.AreEqual(true, Kata.ZeroFuel(60, 30, 3));
      Assert.AreEqual(false, Kata.ZeroFuel(70, 25, 1));
      Assert.AreEqual(false, Kata.ZeroFuel(100, 25, 3));
    }
    
    [Test]
    public void RandomTest()
    {
      Random rnd = new Random();
      
      for (int i = 0; i < 100; ++i)
      {
        uint d = (uint)rnd.Next(10, 100),
             m = (uint)rnd.Next(10, 30),
             g = (uint)rnd.Next(1, 5);
             
        bool expected = Solution.ZeroFuel(d, m, g);
        bool actual = Kata.ZeroFuel(d, m, g);
        
        Assert.AreEqual(expected, actual);
      }
    }
  }
}
