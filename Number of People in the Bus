//8 kyu
//Instructions: 
//You are provided with a list (or array) of integer arrays (or tuples). 
//Each integer array has two items which represent number of people get into bus (The first item) and number of people get off the bus (The second item) in a bus stop.
//Your task is to return number of people who are still in the bus after the last bus station (after the last array). 


using System;
using System.Collections.Generic;

public class Kata
    {
        public static int Number(List<int[]> peopleListInOut)
        {
            int on = 0;
            int off = 0;
            foreach(int[] intArr in peopleListInOut)
              {
              on += intArr[0];
              off += intArr[1];
              }
            return on - off;
        }
    }
    
//test
using NUnit.Framework;
  using System;
  using System.Collections.Generic;
  
  
    [TestFixture]
    public class MyTest
    {
        [Test]
        public void FirstTest()
        {
            List<int[]> peopleList = new List<int[]>(){new []{10,0},new []{3,5}, new []{5,8}};
            Assert.AreEqual(5,Kata.Number(peopleList));
        }
        [Test]
        public void SecondTest()
        {
            List<int[]> peopleList = new List<int[]>() { new[] { 3, 0 }, new[] { 9, 1 }, new[] { 4, 10 }, new[] { 12, 2 }, new[] { 6, 1 }, new[] { 7, 10 } };
            Assert.AreEqual(17, Kata.Number(peopleList));
        }
        [Test]
        public void ThirdTest()
        {
            List<int[]> peopleList = new List<int[]>() { new[] { 3, 0 }, new[] { 9, 1 }, new[] { 4, 8 }, new[] { 12, 2 }, new[] { 6, 1 }, new[] { 7, 8 } };
            Assert.AreEqual(21, Kata.Number(peopleList));
        }
    }
