//7 kyu
//Instructions:
/*Create a function that returns the name of the winner in a fight between two fighters.

Each fighter takes turns attacking the other and whoever kills the other first is victorious. Death is defined as having health <= 0.

Each fighter will be a Fighter object/instance. See the Fighter class below in your chosen language.

Both health and damagePerAttack (damage_per_attack for python) will be integers larger than 0. You can mutate the Fighter objects.

Example:
public class Fighter {
  public string Name;
  public int Health, DamagePerAttack;
  public Fighter(string name, int health, int damagePerAttack) {
    this.Name = name;
    this.Health = health;
    this.DamagePerAttack = damagePerAttack;
  }
}
*/
public class Kata {
  public static string declareWinner(Fighter fighter1, Fighter fighter2, string firstAttacker) {
  string winner ="";
  while (fighter1.Health > 0 && fighter2.Health > 0)
  {
     if (firstAttacker == fighter1.Name)
     {
      fighter2.Health -= fighter1.DamagePerAttack;
      if (fighter2.Health <= 0)
        { winner = fighter1.Name; break;} else 
          {fighter1.Health -= fighter2.DamagePerAttack;}
           if (fighter1.Health <= 0)
             {winner = fighter2.Name; break;}
      }
      else
      {
      fighter1.Health -= fighter2.DamagePerAttack;
      if (fighter1.Health <= 0)
             {winner = fighter2.Name; break;} else
              {fighter2.Health -= fighter1.DamagePerAttack;}
                if (fighter2.Health <= 0)
                  { winner = fighter1.Name; break;}
      }
    
    }
    return winner;
    }
      
  }
  
//test
namespace Solution {
  using NUnit.Framework;
  using System;

  [TestFixture]
  public class SolutionTest
  {
    [Test]
    public void BasicTests() {
      Assert.AreEqual("Lew", Kata.declareWinner(new Fighter("Lew", 10, 2),new Fighter("Harry", 5, 4), "Lew"));
      Assert.AreEqual("Harry", Kata.declareWinner(new Fighter("Lew", 10, 2),new Fighter("Harry", 5, 4), "Harry"));
      Assert.AreEqual("Harald", Kata.declareWinner(new Fighter("Harald", 20, 5), new Fighter("Harry", 5, 4), "Harry"));        
      Assert.AreEqual("Harald", Kata.declareWinner(new Fighter("Harald", 20, 5), new Fighter("Harry", 5, 4), "Harald"));        
      Assert.AreEqual("Harald", Kata.declareWinner(new Fighter("Jerry", 30, 3), new Fighter("Harald", 20, 5), "Jerry"));            
      Assert.AreEqual("Harald", Kata.declareWinner(new Fighter("Jerry", 30, 3), new Fighter("Harald", 20, 5), "Harald"));
        
    }
  }
}
