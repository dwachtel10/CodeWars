//8 kyu

//Instructions: Given a random number: You have to return the digits of this number within an array in reverse order.

using System;
using System.Collections.Generic;
using System.Globalization;
using System.Linq;

namespace Solution
{
  class Digitizer
  {
    public static long[] Digitize(long n)
    {
      string number = n.ToString();
      char[] arr = number.ToCharArray();
      Array.Reverse(arr);
      long[] longArr = Array.ConvertAll(arr, c => (long)Char.GetNumericValue(c));
     return longArr;
    }
  }
}

//tests

using System;
using NUnit.Framework;

namespace Solution
{  
  [TestFixture]
  public class SolutionTest
  {
    [Test]
    public void FixedTest()
    {
      Assert.AreEqual(new long[] { 1, 3, 2, 5, 3 }, Digitizer.Digitize(35231));
      Assert.AreEqual(new long[] { 7, 5, 3, 2, 8, 5, 3, 2 }, Digitizer.Digitize(23582357));
      Assert.AreEqual(new long[] { 8, 3, 7, 4, 6, 7, 4, 8, 9 }, Digitizer.Digitize(984764738));
      Assert.AreEqual(new long[] { 0, 2, 9, 3, 9, 8, 2, 6, 7, 5, 4 }, Digitizer.Digitize(45762893920));
      Assert.AreEqual(new long[] { 4, 9, 3, 8, 3, 8, 2, 0, 7, 8, 4, 5 }, Digitizer.Digitize(548702838394));
    }
  }
}
