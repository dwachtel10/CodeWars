//8 kyu

//Instructions
//Sum all the numbers of the array (in F# and Haskell you get a list) except the highest and the lowest element (the value, not the index!).
//(The highest/lowest element is respectively only one element at each edge, even if there are more than one with the same value!)
//If array is empty, null or None, or if only 1 Element exists, return 0.

using System;
using System.Linq;

public static class Kata
{
  public static int Sum(int[] numbers)
  {
    if (numbers != null && numbers.Length > 1)
    {return numbers.Sum() - numbers.Min() - numbers.Max();}
    else{
    return 0;
    }
  }
}

//tests
using System;
using NUnit.Framework;

[TestFixture]
public class SumTests
{
  [Test]
  public void SumPositives()
  {
    Assert.AreEqual(16, Kata.Sum(new[] { 6, 2, 1, 8, 10}));
  }
}
