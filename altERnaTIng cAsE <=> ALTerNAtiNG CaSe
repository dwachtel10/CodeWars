//8 kyu
//Instructions: [Write a function] such that each lowercase letter becomes uppercase and each uppercase letter becomes lowercase.


using System;

namespace Extensions
{
  public static class StringExt
  {
    public static string ToAlternatingCase (this string s)
    {
      string final = "";
      foreach(char c in s)
      {
        if (char.IsUpper(c))
          {final += (c.ToString().ToLower());}
          else if (char.IsLower(c))
          {final+= (c.ToString().ToUpper());}
          else
          {final+= c.ToString();}
      }
      return final;
    }
  }
}

//tests

using NUnit.Framework;
using Extensions;

[TestFixture]
public class Test
{
  [Test]
  public void Examples()
  {
    Assert.AreEqual("HELLO WORLD", "hello world".ToAlternatingCase());
    Assert.AreEqual("hello world", "HELLO WORLD".ToAlternatingCase());
    Assert.AreEqual("HELLO world", "hello WORLD".ToAlternatingCase());
    Assert.AreEqual("hEllO wOrld", "HeLLo WoRLD".ToAlternatingCase());
    Assert.AreEqual("12345", "12345".ToAlternatingCase());
    Assert.AreEqual("1A2B3C4D5E", "1a2b3c4d5e".ToAlternatingCase());
    Assert.AreEqual("sTRING.tOaLTERNATINGcASE", "String.ToAlternatingCase".ToAlternatingCase());
    Assert.AreEqual("Hello World", "Hello World".ToAlternatingCase().ToAlternatingCase(), "Hello World => hELLO wORLD => Hello World");
  }
}
